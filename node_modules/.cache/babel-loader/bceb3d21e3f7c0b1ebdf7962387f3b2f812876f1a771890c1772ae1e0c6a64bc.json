{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDEEP\\\\Desktop\\\\React\\\\myapp\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"btn clicked \" + text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const handleOnChange = event => {\n    console.log(\"text changed\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpClick,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","console","log","text","newtext","toUpperCase","setText","handleOnChange","event","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SANDEEP/Desktop/React/myapp/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick=()=>{\r\n    console.log(\"btn clicked \"+text);\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    \r\n  }\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"text changed\");\r\n    setText(event.target.value);\r\n  }\r\n  const[text,setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={\r\n        handleUpClick\r\n      }>Convert to Uppercase</button>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAMC,aAAa,GAACA,CAAA,KAAI;IACtBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAACC,IAAI,CAAC;IAChC,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAChCC,OAAO,CAACF,OAAO,CAAC;EAElB,CAAC;EACD,MAAMG,cAAc,GAAEC,KAAK,IAAG;IAC5BP,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD,MAAK,CAACP,IAAI,EAACG,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,oBACEE,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKb,KAAK,CAACc;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBtB,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAAAN,QAAA,eACnBjB,OAAA;QAAUuB,SAAS,EAAC,cAAc;QAACP,KAAK,EAAEP,IAAK;QAACe,QAAQ,EAAEX,cAAe;QAACY,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACNtB,OAAA;MAAQuB,SAAS,EAAC,iBAAiB;MAACI,OAAO,EACzCrB,aACD;MAAAW,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC/B,CAAC;AAEP;AAACjB,EAAA,CAvBuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}