{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDEEP\\\\Desktop\\\\React\\\\myapp\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    //  console.log(\"btn clicked \"+text);\n    if (text.length === 0) {\n      props.showAlert(\"Please enter some text!\", \"danger\");\n    } else {\n      let newtext = text.toUpperCase();\n      setText(newtext);\n      props.showAlert(\"Converted to UpperCase!\", \"success\");\n    }\n  };\n  const handlelowClick = () => {\n    //  console.log(\"btn clicked \"+text);\n    let newtext = text.toLowerCase();\n    setText(newtext);\n    console.log(textBold);\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\n  };\n  const handleboldClick = () => {\n    //  console.log(\"btn clicked \"+text);\n    let newtext = text;\n    setText(newtext);\n    if (textBold === \"normal\") {\n      setTextBold(\"bold\");\n    } else {\n      setTextBold(\"normal\");\n    }\n    console.log(textBold);\n  };\n  const handleitalicClick = () => {\n    //  console.log(\"btn clicked \"+text);\n    let newtext = text;\n    setText(newtext);\n    if (textItalic === \"normal\") {\n      setTextItalic(\"italic\");\n    } else {\n      setTextItalic(\"normal\");\n    }\n    console.log(textBold);\n  };\n  const handleOnChange = event => {\n    // console.log(\"text changed\");\n    setText(event.target.value);\n  };\n  const handleCopy = () => {\n    let text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Text copied to clipboard!\", \"success\");\n  };\n  const handleExtraSpace = () => {\n    let text_opt = text.split(/[ ]+/);\n    setText(text_opt.join(\" \"));\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\n  };\n  let wc = 0;\n  const wordCount = () => {\n    if (text.length > 0) {\n      for (let i = 0; i < text.length - 1; i++) {\n        //Counts all the spaces present in the string\n        //It doesn't include the first space as it won't be considered as a word\n        if (text[i] === \" \" && isLetter(text.charAt(i + 1)) && i > 0) {\n          wc++;\n        }\n      }\n      wc++;\n    }\n    return wc;\n  };\n  const isLetter = c => {\n    return c.toLowerCase() !== c.toUpperCase();\n  };\n  let myStyle = {\n    color: props.mode === \"light\" ? \"black\" : \"white\"\n  };\n  const [text, setText] = useState(\"Set Text Here2\");\n  const [textBold, setTextBold] = useState(\"normal\");\n  const [textItalic, setTextItalic] = useState(\"normal\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        ...myStyle\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\",\n          style: {\n            fontWeight: textBold,\n            fontStyle: textItalic,\n            backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\n            color: props.mode === \"dark\" ? \"white\" : \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mx-3\",\n        onClick: handlelowClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn1 btn-primary mx-2\",\n        value: textBold,\n        onClick: handleboldClick,\n        style: {\n          fontWeight: textBold\n        },\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn2 btn-primary mx-2\",\n        value: textBold,\n        onClick: handleitalicClick,\n        style: {\n          fontStyle: textItalic\n        },\n        children: \"I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        value: textBold,\n        onClick: handleCopy,\n        children: \"CopyText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        value: textBold,\n        onClick: handleExtraSpace,\n        children: \"Remove Extra Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        ...myStyle\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [wordCount(), \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter Something in the textbox to preview it here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"7MTEMyNAip+3PJ667LhVeydKJlw=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","text","length","showAlert","newtext","toUpperCase","setText","handlelowClick","toLowerCase","console","log","textBold","handleboldClick","setTextBold","handleitalicClick","textItalic","setTextItalic","handleOnChange","event","target","value","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpace","text_opt","split","join","wc","wordCount","i","isLetter","charAt","c","myStyle","color","mode","children","className","style","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","fontWeight","fontStyle","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SANDEEP/Desktop/React/myapp/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    if (text.length === 0) {\r\n      props.showAlert(\"Please enter some text!\", \"danger\");\r\n    } else {\r\n      let newtext = text.toUpperCase();\r\n      setText(newtext);\r\n      props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n  };\r\n  const handlelowClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    console.log(textBold);\r\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n  };\r\n  const handleboldClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text;\r\n    setText(newtext);\r\n    if (textBold === \"normal\") {\r\n      setTextBold(\"bold\");\r\n    } else {\r\n      setTextBold(\"normal\");\r\n    }\r\n    console.log(textBold);\r\n  };\r\n  const handleitalicClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text;\r\n    setText(newtext);\r\n    if (textItalic === \"normal\") {\r\n      setTextItalic(\"italic\");\r\n    } else {\r\n      setTextItalic(\"normal\");\r\n    }\r\n    console.log(textBold);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"text changed\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied to clipboard!\", \"success\");\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let text_opt = text.split(/[ ]+/);\r\n    setText(text_opt.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n  };\r\n  let wc = 0;\r\n  const wordCount = () => {\r\n    if (text.length > 0) {\r\n      for (let i = 0; i < text.length - 1; i++) {\r\n        //Counts all the spaces present in the string\r\n        //It doesn't include the first space as it won't be considered as a word\r\n        if (text[i] === \" \" && isLetter(text.charAt(i + 1)) && i > 0) {\r\n          wc++;\r\n        }\r\n      }\r\n      wc++;\r\n    }\r\n    return wc;\r\n  };\r\n  const isLetter = (c) => {\r\n    return c.toLowerCase() !== c.toUpperCase();\r\n  };\r\n  let myStyle = {\r\n    color: props.mode === \"light\" ? \"black\" : \"white\",\r\n  };\r\n  const [text, setText] = useState(\"Set Text Here2\");\r\n  const [textBold, setTextBold] = useState(\"normal\");\r\n  const [textItalic, setTextItalic] = useState(\"normal\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ ...myStyle }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              fontWeight: textBold,\r\n              fontStyle: textItalic,\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-success mx-3\" onClick={handlelowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn1 btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleboldClick}\r\n          style={{ fontWeight: textBold }}\r\n        >\r\n          B\r\n        </button>\r\n        <button\r\n          className=\"btn2 btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleitalicClick}\r\n          style={{ fontStyle: textItalic }}\r\n        >\r\n          I\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleCopy}\r\n        >\r\n          CopyText\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{ ...myStyle }}>\r\n        <h2>Your Text Summary</h2>\r\n\r\n        <p>\r\n          {wordCount()} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter Something in the textbox to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}