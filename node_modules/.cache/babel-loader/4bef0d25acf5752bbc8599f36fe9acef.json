{"ast":null,"code":"import React,{useState}from\"react\";export default function TextForm(props){const handleUpClick=()=>{//  console.log(\"btn clicked \"+text);\nif(text.length===0){props.showAlert(\"Please enter some text!\",\"danger\");}else{let newtext=text.toUpperCase();setText(newtext);props.showAlert(\"Converted to UpperCase!\",\"success\");}};const handlelowClick=()=>{//  console.log(\"btn clicked \"+text);\nlet newtext=text.toLowerCase();setText(newtext);console.log(textBold);props.showAlert(\"Converted to LowerCase!\",\"success\");};const handleboldClick=()=>{//  console.log(\"btn clicked \"+text);\nlet newtext=text;setText(newtext);if(textBold===\"normal\"){setTextBold(\"bold\");}else{setTextBold(\"normal\");}console.log(textBold);};const handleitalicClick=()=>{//  console.log(\"btn clicked \"+text);\nlet newtext=text;setText(newtext);if(textItalic===\"normal\"){setTextItalic(\"italic\");}else{setTextItalic(\"normal\");}console.log(textBold);};const handleOnChange=event=>{// console.log(\"text changed\");\nsetText(event.target.value);};const handleCopy=()=>{let text=document.getElementById(\"myBox\");text.select();navigator.clipboard.writeText(text.value);props.showAlert(\"Text copied to clipboard!\",\"success\");};const handleExtraSpace=()=>{let text_opt=text.split(/[ ]+/);setText(text_opt.join(\" \"));props.showAlert(\"Extra Spaces Removed!\",\"success\");};let wc=0;const wordCount=()=>{if(text.length>0){for(let i=0;i<text.length-1;i++){//Counts all the spaces present in the string\n//It doesn't include the first space as it won't be considered as a word\nif(text[i]===\" \"&&isLetter(text.charAt(i+1))&&i>0){wc++;}}wc++;}return wc;};const isLetter=c=>{return c.toLowerCase()!==c.toUpperCase();};let myStyle={color:props.mode===\"light\"?\"black\":\"white\"};const[text,setText]=useState(\"Set Text Here2\");const[textBold,setTextBold]=useState(\"normal\");const[textItalic,setTextItalic]=useState(\"normal\");return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\",style:{...myStyle}},/*#__PURE__*/React.createElement(\"h1\",null,props.heading),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnChange,id:\"myBox\",rows:\"8\",style:{fontWeight:textBold,fontStyle:textItalic,backgroundColor:props.mode===\"dark\"?\"grey\":\"white\",color:props.mode===\"dark\"?\"white\":\"black\"}})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",onClick:handleUpClick},\"Convert to Uppercase\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-success mx-3\",onClick:handlelowClick},\"Convert to Lowercase\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn1 btn-primary mx-2\",value:textBold,onClick:handleboldClick,style:{fontWeight:textBold}},\"B\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn2 btn-primary mx-2\",value:textBold,onClick:handleitalicClick,style:{fontStyle:textItalic}},\"I\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary mx-2\",value:textBold,onClick:handleCopy},\"CopyText\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary mx-2\",value:textBold,onClick:handleExtraSpace},\"Remove Extra Space\")),/*#__PURE__*/React.createElement(\"div\",{className:\"container my-3\",style:{...myStyle}},/*#__PURE__*/React.createElement(\"h2\",null,\"Your Text Summary\"),/*#__PURE__*/React.createElement(\"p\",null,wordCount(),\" words and \",text.length,\" characters\"),/*#__PURE__*/React.createElement(\"p\",null,0.008*text.split(\" \").length,\" Minutes read\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Preview\"),/*#__PURE__*/React.createElement(\"p\",null,text.length>0?text:\"Enter Something in the textbox to preview it here\")));}","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","text","length","showAlert","newtext","toUpperCase","setText","handlelowClick","toLowerCase","console","log","textBold","handleboldClick","setTextBold","handleitalicClick","textItalic","setTextItalic","handleOnChange","event","target","value","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpace","text_opt","split","join","wc","wordCount","i","isLetter","charAt","c","myStyle","color","mode","createElement","Fragment","className","style","heading","onChange","id","rows","fontWeight","fontStyle","backgroundColor","onClick"],"sources":["C:/Users/SANDEEP/Desktop/React/TextUtils-React/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    if (text.length === 0) {\r\n      props.showAlert(\"Please enter some text!\", \"danger\");\r\n    } else {\r\n      let newtext = text.toUpperCase();\r\n      setText(newtext);\r\n      props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n  };\r\n  const handlelowClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    console.log(textBold);\r\n    props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n  };\r\n  const handleboldClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text;\r\n    setText(newtext);\r\n    if (textBold === \"normal\") {\r\n      setTextBold(\"bold\");\r\n    } else {\r\n      setTextBold(\"normal\");\r\n    }\r\n    console.log(textBold);\r\n  };\r\n  const handleitalicClick = () => {\r\n    //  console.log(\"btn clicked \"+text);\r\n    let newtext = text;\r\n    setText(newtext);\r\n    if (textItalic === \"normal\") {\r\n      setTextItalic(\"italic\");\r\n    } else {\r\n      setTextItalic(\"normal\");\r\n    }\r\n    console.log(textBold);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"text changed\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied to clipboard!\", \"success\");\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let text_opt = text.split(/[ ]+/);\r\n    setText(text_opt.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n  };\r\n  let wc = 0;\r\n  const wordCount = () => {\r\n    if (text.length > 0) {\r\n      for (let i = 0; i < text.length - 1; i++) {\r\n        //Counts all the spaces present in the string\r\n        //It doesn't include the first space as it won't be considered as a word\r\n        if (text[i] === \" \" && isLetter(text.charAt(i + 1)) && i > 0) {\r\n          wc++;\r\n        }\r\n      }\r\n      wc++;\r\n    }\r\n    return wc;\r\n  };\r\n  const isLetter = (c) => {\r\n    return c.toLowerCase() !== c.toUpperCase();\r\n  };\r\n  let myStyle = {\r\n    color: props.mode === \"light\" ? \"black\" : \"white\",\r\n  };\r\n  const [text, setText] = useState(\"Set Text Here2\");\r\n  const [textBold, setTextBold] = useState(\"normal\");\r\n  const [textItalic, setTextItalic] = useState(\"normal\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ ...myStyle }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              fontWeight: textBold,\r\n              fontStyle: textItalic,\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-success mx-3\" onClick={handlelowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn1 btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleboldClick}\r\n          style={{ fontWeight: textBold }}\r\n        >\r\n          B\r\n        </button>\r\n        <button\r\n          className=\"btn2 btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleitalicClick}\r\n          style={{ fontStyle: textItalic }}\r\n        >\r\n          I\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleCopy}\r\n        >\r\n          CopyText\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          value={textBold}\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{ ...myStyle }}>\r\n        <h2>Your Text Summary</h2>\r\n\r\n        <p>\r\n          {wordCount()} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter Something in the textbox to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}