{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDEEP\\\\Desktop\\\\React\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"MyApp\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter the text to analyze below\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","About","Navbar","TextForm","React","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","toggleMode","document","body","style","backgroundColor","showAlert","title","message","type","msg","setTimeout","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["C:/Users/SANDEEP/Desktop/React/myapp/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return (\n    <>\n      <Navbar\n        title=\"MyApp\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <TextForm\n              heading=\"Enter the text to analyze below\"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          </Route>\n        </Switch>\n\n        {/* <About /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}