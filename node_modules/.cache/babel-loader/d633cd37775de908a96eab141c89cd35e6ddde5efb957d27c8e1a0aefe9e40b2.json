{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANDEEP\\\\Desktop\\\\React\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n/* import About from \"./components/About\"; */\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"MyApp\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","toggleMode","document","body","style","backgroundColor","showAlert","title","message","type","msg","setTimeout","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/SANDEEP/Desktop/React/myapp/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Alert from \"./components/Alert\";\n/* import About from \"./components/About\"; */\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\n\n\n\nfunction App() {\n  const [mode,setMode] = useState('light')\n  const [alert,setAlert] = useState(null)\n  const toggleMode = () =>{\n    if(mode===\"light\"){ \n      setMode(\"dark\")\n      document.body.style.backgroundColor=\"#042743\"\n      showAlert(\"Dark mode is enabled\",\"success\")\n      document.title = \"TextUtils - Dark Mode\"\n     } else{\n      setMode(\"light\")\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light mode is enabled\",\"success\")\n      document.title =\"TextUtils - Light Mode\"\n    }\n    \n  }\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{setAlert(null)},1500)\n  }\n  return (\n    <>\n      <Navbar title=\"MyApp\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\" >\n      <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n      {/* <About /> */}\n      </div>\n     \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAMW,UAAU,GAAGA,CAAA,KAAK;IACtB,IAAGJ,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CC,SAAS,CAAC,sBAAsB,EAAC,SAAS,CAAC;MAC3CJ,QAAQ,CAACK,KAAK,GAAG,uBAAuB;IACzC,CAAC,MAAK;MACLT,OAAO,CAAC,OAAO,CAAC;MAChBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CC,SAAS,CAAC,uBAAuB,EAAC,SAAS,CAAC;MAC5CJ,QAAQ,CAACK,KAAK,GAAE,wBAAwB;IAC1C;EAEF,CAAC;EACD,MAAMD,SAAS,GAAGA,CAACE,OAAO,EAACC,IAAI,KAAG;IAChCT,QAAQ,CAAC;MACPU,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MAACX,QAAQ,CAAC,IAAI,CAAC;IAAA,CAAC,EAAC,IAAI,CAAC;EACvC,CAAC;EACD,oBACER,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA,CAACL,MAAM;MAACoB,KAAK,EAAC,OAAO;MAACM,SAAS,EAAC,OAAO;MAAChB,IAAI,EAAEA,IAAK;MAACI,UAAU,EAAEA;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EzB,OAAA,CAACN,KAAK;MAACa,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC/BpB,OAAA,CAACJ,QAAQ;QAAC+B,OAAO,EAAC,iCAAiC;QAACtB,IAAI,EAAEA,IAAK;QAACS,SAAS,EAAEA;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElF,CAAC;EAAA,eAEN,CAAC;AAEP;AAACrB,EAAA,CAnCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}